import pandas as pd
import avg_returns_list as arl
from datetime import datetime
import os


stocks = [
    "MSFT",
    "AAPL",
    "NVDA",
    "GOOG",
    "GOOGL",
    "AMZN",
    "META",
    "BRK.B",
    "LLY",
    "AVGO",
    "TSLA",
    "JPM",
    "WMT",
    "V",
    "XOM",
    "UNH",
    "MA",
    "ORCL",
    "PG",
    "COST",
    "JNJ",
    "HD",
    "MRK",
    "BAC",
    "ABBV",
    "NFLX",
    "CVX",
    "KO",
    "AMD",
    "ADBE",
    "CRM",
    "PEP",
    "QCOM",
    "WFC",
    "TMUS",
    "LIN",
    "TMO",
    "AMAT",
    "CSCO",
    "ACN",
    "INTU",
    "MCD",
    "ABT",
    "TXN",
    "DHR",
    "GE",
    "DIS",
    "VZ",
    "AXP",
    "AMGN",
    "IBM",
    "NOW",
    "MS",
    "CAT",
    "PFE",
    "PM",
    "ISRG",
    "CMCSA",
    "GS",
    "BX",
    "UBER",
    "MU",
    "NEE",
    "SPGI",
    "LRCX",
    "HON",
    "UNP",
    "T",
    "COP",
    "RTX",
    "BKNG",
    "INTC",
    "SCHW",
    "SYK",
    "ELV",
    "TJX",
    "ETN",
    "VRTX",
    "PGR",
    "C",
    "LOW",
    "BLK",
    "UPS",
    "NKE",
    "BA",
    "ADI",
    "REGN",
    "KLAC",
    "ANET",
    "BSX",
    "LMT",
    "PANW",
    "PLD",
    "MMC",
    "CB",
    "DE",
    "ABNB",
    "MDT",
    "ADP",
    "SNPS",
    "CI",
    "AMT",
    "MDLZ",
    "SBUX",
    "FI",
    "CDNS",
    "GILD",
    "SO",
    "CMG",
    "WM",
    "HCA",
    "BMY",
    "APH",
    "ICE",
    "ZTS",
    "MO",
    "CL",
    "GD",
    "MCO",
    "DUK",
    "MCK",
    "SHW",
    "EOG",
    "FDX",
    "TT",
    "CVS",
    "EQIX",
    "CTAS",
    "TDG",
    "CME",
    "ITW",
    "FCX",
    "NXPI",
    "MAR",
    "TGT",
    "ECL",
    "SLB",
    "BDX",
    "CSX",
    "PH",
    "CEG",
    "MSI",
    "NOC",
    "AON",
    "WELL",
    "PNC",
    "EMR",
    "MFG",
    "CPAY",
    "ULTA",
    "CINF",
    "APTV",
    "PFG",
    "BALL",
    "TDY",
    "RF",
    "CBOE",
    "ALGN",
    "ESS",
    "WBD",
    "DRI",
    "CMS",
    "ATO",
    "BBY",
    "VRSN",
    "OMC",
    "COO",
    "J",
    "DPZ",
    "AVY",
    "HOLX",
    "NTRS",
    "LH",
    "SWKS",
    "EXPD",
    "ILMN",
    "MOH",
    "LUV",
    "WAT",
    "BAX",
    "CLX",
    "HRL",
    "L",
    "MAA",
    "JBHT",
    "TXT",
    "CFG",
    "BLDR",
    "EQT",
    "MRO",
    "NRG",
    "EG",
    "PKG",
    "ZBRA",
    "FDS",
    "UAL",
    "BG",
    "EXPE",
    "GEN",
    "FOX",
    "FOXA",
    "DGX",
    "IP",
    "NWS",
    "NWSA",
    "IEX",
    "CE",
    "MAS",
    "PODD",
    "AKAM",
    "AMCR",
    "TRMB",
    "DOC",
    "SNA",
    "CPB",
    "UDR",
    "CAG",
    "INCY",
    "KEY",
    "MGM",
    "ENPH",
    "LNT",
    "JBL",
    "KIM",
    "CF",
    "NDSN",
    "NI",
    "WRK",
    "RVTY",
    "VTRS",
    "HST",
    "PNR",
    "AES",
    "EVRG",
    "DVA",
    "SWK",
    "JKHY",
    "JNPR",
    "LW",
    "AOS",
    "SJM",
    "BEN",
    "POOL",
    "CPT",
    "ALB",
    "REG",
    "KMX",
    "QRVO",
    "TECH",
    "LKQ",
    "EMN",
    "APA",
    "UHS",
    "EPAM",
    "TAP",
    "IPG",
    "RL",
    "CRL",
    "CHRW",
    "CTLT",
    "FFIV",
    "ALLE",
    "WBA",
    "TFX",
    "HII",
    "WYNN",
    "BXP",
    "TPR",
    "MOS",
    "SOLV",
    "AIZ",
    "PNW",
    "BBWI",
    "HSIC",
    "FRT",
    "GNRC",
    "PAYC",
    "CZR",
    "HAS",
    "DAY",
    "MTCH",
    "BIO",
    "GL",
    "NCLH",
    "MKTX",
    "PARA",
    "BWA",
    "AAL",
    "FMC",
    "MHK",
    "ETSY",
]

df = arl.get_monthly_returns(stocks, month="August").sort_values(
    by="pos_rate%", ascending=False
)


hundred = df[df["pos_rate%"] == 100]
# hundred = df[df["pos_rate%"] >= 50]
print(hundred.to_string())


filepath = f"{datetime.today().strftime('%Y-%m-%d')}.csv"
if os.path.exists(filepath):
    pass
else:
    hundred.to_csv(filepath, index=True)
